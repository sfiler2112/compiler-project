Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'
    3                | error ';'

    4 optional_variable: variable
    5                  | %empty

    6 variable: IDENTIFIER ':' type IS statement_

    7 type: INTEGER
    8     | BOOLEAN

    9 body: BEGIN_ statement_ END ';'
   10     | error ';'

   11 statement_: statement ';'
   12           | error ';'

   13 statement: expression
   14          | REDUCE operator reductions ENDREDUCE

   15 operator: ADDOP
   16         | MULOP

   17 reductions: reductions statement_
   18           | %empty

   19 expression: expression ANDOP relation
   20           | relation

   21 relation: relation RELOP term
   22         | term

   23 term: term ADDOP factor
   24     | factor

   25 factor: factor MULOP primary
   26       | primary

   27 primary: '(' expression ')'
   28        | INT_LITERAL
   29        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 27
')' (41) 27
':' (58) 6
';' (59) 2 3 9 10 11 12
error (256) 3 10 12
IDENTIFIER (258) 2 6 29
INT_LITERAL (259) 28
ADDOP (260) 15 23
MULOP (261) 16 25
RELOP (262) 21
ANDOP (263) 19
BEGIN_ (264) 9
BOOLEAN (265) 8
END (266) 9
ENDREDUCE (267) 14
FUNCTION (268) 2
INTEGER (269) 7
IS (270) 6
REDUCE (271) 14
RETURNS (272) 2


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
function (23)
    on left: 1, on right: 0
function_header (24)
    on left: 2 3, on right: 1
optional_variable (25)
    on left: 4 5, on right: 1
variable (26)
    on left: 6, on right: 4
type (27)
    on left: 7 8, on right: 2 6
body (28)
    on left: 9 10, on right: 1
statement_ (29)
    on left: 11 12, on right: 6 9 17
statement (30)
    on left: 13 14, on right: 11
operator (31)
    on left: 15 16, on right: 14
reductions (32)
    on left: 17 18, on right: 14 17
expression (33)
    on left: 19 20, on right: 13 19 27
relation (34)
    on left: 21 22, on right: 19 20 21
term (35)
    on left: 23 24, on right: 21 22 23
factor (36)
    on left: 25 26, on right: 23 24 25
primary (37)
    on left: 27 28 29, on right: 25 26


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 9
    variable           go to state 10


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . RETURNS type ';'

    RETURNS  shift, and go to state 11


State 7

    0 $accept: function $end .

    $default  accept


State 8

    6 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 12


State 9

    1 function: function_header optional_variable . body

    error   shift, and go to state 13
    BEGIN_  shift, and go to state 14

    body  go to state 15


State 10

    4 optional_variable: variable .

    $default  reduce using rule 4 (optional_variable)


State 11

    2 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 16
    INTEGER  shift, and go to state 17

    type  go to state 18


State 12

    6 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 16
    INTEGER  shift, and go to state 17

    type  go to state 19


State 13

   10 body: error . ';'

    ';'  shift, and go to state 20


State 14

    9 body: BEGIN_ . statement_ END ';'

    error        shift, and go to state 21
    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    REDUCE       shift, and go to state 24
    '('          shift, and go to state 25

    statement_  go to state 26
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    primary     go to state 32


State 15

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 16

    8 type: BOOLEAN .

    $default  reduce using rule 8 (type)


State 17

    7 type: INTEGER .

    $default  reduce using rule 7 (type)


State 18

    2 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 33


State 19

    6 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 34


State 20

   10 body: error ';' .

    $default  reduce using rule 10 (body)


State 21

   12 statement_: error . ';'

    ';'  shift, and go to state 35


State 22

   29 primary: IDENTIFIER .

    $default  reduce using rule 29 (primary)


State 23

   28 primary: INT_LITERAL .

    $default  reduce using rule 28 (primary)


State 24

   14 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 36
    MULOP  shift, and go to state 37

    operator  go to state 38


State 25

   27 primary: '(' . expression ')'

    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    '('          shift, and go to state 25

    expression  go to state 39
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    primary     go to state 32


State 26

    9 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 40


State 27

   11 statement_: statement . ';'

    ';'  shift, and go to state 41


State 28

   13 statement: expression .
   19 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 42

    $default  reduce using rule 13 (statement)


State 29

   20 expression: relation .
   21 relation: relation . RELOP term

    RELOP  shift, and go to state 43

    $default  reduce using rule 20 (expression)


State 30

   22 relation: term .
   23 term: term . ADDOP factor

    ADDOP  shift, and go to state 44

    $default  reduce using rule 22 (relation)


State 31

   24 term: factor .
   25 factor: factor . MULOP primary

    MULOP  shift, and go to state 45

    $default  reduce using rule 24 (term)


State 32

   26 factor: primary .

    $default  reduce using rule 26 (factor)


State 33

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 34

    6 variable: IDENTIFIER ':' type IS . statement_

    error        shift, and go to state 21
    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    REDUCE       shift, and go to state 24
    '('          shift, and go to state 25

    statement_  go to state 46
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    primary     go to state 32


State 35

   12 statement_: error ';' .

    $default  reduce using rule 12 (statement_)


State 36

   15 operator: ADDOP .

    $default  reduce using rule 15 (operator)


State 37

   16 operator: MULOP .

    $default  reduce using rule 16 (operator)


State 38

   14 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 18 (reductions)

    reductions  go to state 47


State 39

   19 expression: expression . ANDOP relation
   27 primary: '(' expression . ')'

    ANDOP  shift, and go to state 42
    ')'    shift, and go to state 48


State 40

    9 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 49


State 41

   11 statement_: statement ';' .

    $default  reduce using rule 11 (statement_)


State 42

   19 expression: expression ANDOP . relation

    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    '('          shift, and go to state 25

    relation  go to state 50
    term      go to state 30
    factor    go to state 31
    primary   go to state 32


State 43

   21 relation: relation RELOP . term

    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    '('          shift, and go to state 25

    term     go to state 51
    factor   go to state 31
    primary  go to state 32


State 44

   23 term: term ADDOP . factor

    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    '('          shift, and go to state 25

    factor   go to state 52
    primary  go to state 32


State 45

   25 factor: factor MULOP . primary

    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    '('          shift, and go to state 25

    primary  go to state 53


State 46

    6 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 6 (variable)


State 47

   14 statement: REDUCE operator reductions . ENDREDUCE
   17 reductions: reductions . statement_

    error        shift, and go to state 21
    IDENTIFIER   shift, and go to state 22
    INT_LITERAL  shift, and go to state 23
    ENDREDUCE    shift, and go to state 54
    REDUCE       shift, and go to state 24
    '('          shift, and go to state 25

    statement_  go to state 55
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    primary     go to state 32


State 48

   27 primary: '(' expression ')' .

    $default  reduce using rule 27 (primary)


State 49

    9 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 9 (body)


State 50

   19 expression: expression ANDOP relation .
   21 relation: relation . RELOP term

    RELOP  shift, and go to state 43

    $default  reduce using rule 19 (expression)


State 51

   21 relation: relation RELOP term .
   23 term: term . ADDOP factor

    ADDOP  shift, and go to state 44

    $default  reduce using rule 21 (relation)


State 52

   23 term: term ADDOP factor .
   25 factor: factor . MULOP primary

    MULOP  shift, and go to state 45

    $default  reduce using rule 23 (term)


State 53

   25 factor: factor MULOP primary .

    $default  reduce using rule 25 (factor)


State 54

   14 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 14 (statement)


State 55

   17 reductions: reductions statement_ .

    $default  reduce using rule 17 (reductions)
